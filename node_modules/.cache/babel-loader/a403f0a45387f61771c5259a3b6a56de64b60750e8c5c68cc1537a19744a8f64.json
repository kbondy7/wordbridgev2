{"ast":null,"code":"var _jsxFileName = \"/Users/kieranbondy/Desktop/wordbridgev2/src/components/Game/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from '../board/Board';\nimport LetterTray from '../LetterTray/LetterTray';\nimport { generateBoard } from '../../functions/boardGeneration';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  //States: Tracking mouse data and overall game data\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n    letter: ''\n  });\n  const [gameData, setGameData] = useState({\n    level: 1,\n    start: 0,\n    board: [],\n    tray: ['a', 'c', 'b', 'c']\n  });\n\n  //Getting the closest spaces to dropped tile and returning if it is within range\n  function getClosest(x, y) {\n    const elements = document.querySelectorAll('[id*=\"play\"], [id*=\"tile\"]'); // Get elements with IDs containing \"play\"\n    let closestElement = null;\n    let minDistance = Infinity;\n    elements.forEach(element => {\n      if (element.id !== mousePosition.letter) {\n        const rect = element.getBoundingClientRect();\n        const centerX = rect.left + rect.width / 2;\n        const centerY = rect.top + rect.height / 2;\n        const distance = Math.sqrt((centerX - x) ** 2 + (centerY - y) ** 2);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestElement = element;\n        }\n      }\n    });\n\n    //Checking within range\n    if (closestElement.id.includes('tile') && minDistance > 45) {\n      return \"failure_failure_failure\";\n    }\n    if (closestElement.id.includes('play') && minDistance > 30) {\n      return \"failure_failure_failure\";\n    }\n    return closestElement.id;\n  }\n  useEffect(() => {\n    const width = gameData.level + 2;\n    const height = gameData.level + 2;\n    const [newBoard, newStart] = generateBoard(width, height, gameData.level);\n    setGameData(prevData => {\n      return {\n        ...prevData,\n        board: newBoard,\n        start: newStart\n      };\n    });\n  }, []);\n  //Triggers when a letter is dropped and updates game states\n  useEffect(() => {\n    const [first, second, type] = getClosest(mousePosition.x, mousePosition.y).split('_');\n    if (type !== \"failure\") {\n      const [letter, trayIndex] = mousePosition.letter.split('_');\n      if (type === 'play') {\n        //Placing letter on game board\n        setGameData(prevData => {\n          const updatedBoard = [...prevData.board];\n          const updatedTray = [...prevData.tray];\n          updatedBoard[first][second] = letter;\n          updatedTray.splice(parseInt(trayIndex), 1);\n          return {\n            ...prevData,\n            board: updatedBoard,\n            tray: updatedTray\n          };\n        });\n      } else if (type === 'tile') {\n        setGameData(prevData => {\n          const updatedTray = [...prevData.tray]; // Create a copy of the original tray array\n\n          const index1 = parseInt(trayIndex);\n          const index2 = parseInt(second);\n\n          // Swap the elements at index1 and index2 in the updatedTray array\n          [updatedTray[index1], updatedTray[index2]] = [updatedTray[index2], updatedTray[index1]];\n\n          // Return the updated data with the modified tray array\n          return {\n            ...prevData,\n            tray: updatedTray\n          };\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mousePosition]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        data: gameData.board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(LetterTray, {\n        isMouseDown: isMouseDown,\n        setIsMouseDown: setIsMouseDown,\n        setMousePosition: setMousePosition,\n        letters: gameData.tray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"VsZFvKW8Viar8dQZOiGpRHe/sd8=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","LetterTray","generateBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","isMouseDown","setIsMouseDown","mousePosition","setMousePosition","x","y","letter","gameData","setGameData","level","start","board","tray","getClosest","elements","document","querySelectorAll","closestElement","minDistance","Infinity","forEach","element","id","rect","getBoundingClientRect","centerX","left","width","centerY","top","height","distance","Math","sqrt","includes","newBoard","newStart","prevData","first","second","type","split","trayIndex","updatedBoard","updatedTray","splice","parseInt","index1","index2","children","className","data","fileName","_jsxFileName","lineNumber","columnNumber","letters","_c","$RefreshReg$"],"sources":["/Users/kieranbondy/Desktop/wordbridgev2/src/components/Game/Game.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Board from '../board/Board'\nimport LetterTray from '../LetterTray/LetterTray'\nimport { generateBoard } from '../../functions/boardGeneration'\nimport './Game.css'\n\nexport default function Game() {\n    //States: Tracking mouse data and overall game data\n    const [isMouseDown, setIsMouseDown] = useState(false);\n    const [mousePosition, setMousePosition] = useState({x: 0, y: 0, letter:''})\n    const [gameData, setGameData] = useState({level:1, start:0, board:[],tray:['a','c','b','c']})\n    \n    //Getting the closest spaces to dropped tile and returning if it is within range\n    function getClosest(x, y) {\n        const elements = document.querySelectorAll('[id*=\"play\"], [id*=\"tile\"]'); // Get elements with IDs containing \"play\"\n        let closestElement = null;\n        let minDistance = Infinity;\n      \n        elements.forEach((element) => {\n            if(element.id !== mousePosition.letter){\n                const rect = element.getBoundingClientRect();\n                const centerX = rect.left + rect.width / 2;\n                const centerY = rect.top + rect.height / 2;\n            \n                const distance = Math.sqrt((centerX - x) ** 2 + (centerY - y) ** 2);\n            \n                if (distance < minDistance) {\n                    minDistance = distance;\n                    closestElement = element;\n                }\n            }\n        });\n\n        //Checking within range\n        if(closestElement.id.includes('tile') && minDistance > 45){\n            return \"failure_failure_failure\"\n        }\n        if(closestElement.id.includes('play') && minDistance > 30){\n            return \"failure_failure_failure\"\n        }\n        return closestElement.id;\n      }\n    useEffect(()=>{\n        const width = gameData.level + 2\n        const height = gameData.level + 2\n        const [newBoard, newStart] = generateBoard(width,height, gameData.level)\n        setGameData((prevData) => { return {...prevData, board:newBoard, start: newStart}})\n    },[])\n    //Triggers when a letter is dropped and updates game states\n    useEffect(()=>{\n        const [first,second,type]=getClosest(mousePosition.x, mousePosition.y).split('_')\n        if(type !== \"failure\"){\n            const [letter,trayIndex] = mousePosition.letter.split('_')\n            if(type === 'play'){\n                //Placing letter on game board\n                setGameData((prevData) =>{\n                    const updatedBoard = [...prevData.board];\n                    const updatedTray = [...prevData.tray];\n                    updatedBoard[first][second] = letter;\n                    updatedTray.splice(parseInt(trayIndex), 1)\n                    return { ...prevData, board: updatedBoard, tray: updatedTray };\n                })\n            } else if(type === 'tile'){\n                setGameData((prevData) => {\n                    const updatedTray = [...prevData.tray]; // Create a copy of the original tray array\n                  \n                    const index1 = parseInt(trayIndex);\n                    const index2 = parseInt(second);\n                  \n                    // Swap the elements at index1 and index2 in the updatedTray array\n                    [updatedTray[index1], updatedTray[index2]] = [updatedTray[index2], updatedTray[index1]];\n                  \n                    // Return the updated data with the modified tray array\n                    return { ...prevData, tray: updatedTray };\n                  });\n            }\n            \n        }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[mousePosition])\n\n  return (\n    <> \n    <div className='board-container'>\n        <Board data={gameData.board}></Board>\n    </div>\n    <div className='board-container'>\n        <LetterTray isMouseDown={isMouseDown} setIsMouseDown={setIsMouseDown} setMousePosition={setMousePosition} letters={gameData.tray}></LetterTray>\n    </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}